#+TITLE: Sort Function With Perl
#+CATEGORY: Perl
* Preface
Accomplish sort function with Perl language.
** Print Array Element
#+begin_src perl
sub print_array{
    for my $item (@_){
        print $item, " ";
    }
    print "\b\n";
}
#+end_src
** Bubble Sort
*** First <<bsf>>
#+begin_src perl
my @array = qw(1 32 90 3);
sub bubble_sort{
    my @bubble_sort_result = @_;
    my $length = scalar(@bubble_sort_result);
    for(my $i=0;$i<$length;$i++){
        my $flag = 0;
        for(my $j=0;$j<$length-1-$i;$j++){
            if($bubble_sort_result[$j]>$bubble_sort_result[$j+1]){
                $flag = 1;
                ($bubble_sort_result[$j], $bubble_sort_result[$j+1]) = ($bubble_sort_result[$j+1], $bubble_sort_result[$j]);
            }
        }
        if($flag == 0){
            print "\033[32m(在进行全排序之前第($i)趟完成):\033[0m";
            return 0;
        }
    }
}
#+end_src
This bubble sort function won't change the origin value in the array. If you
want to change them, you can use ~reference~ in Perl like this.
*** Second
#+begin_src perl :results output
#!/usr/bin/perl
use warnings;
use strict;
my @array = qw(1 9 4 2 3);
sub bubble_sort_ref{
    my $bubble_sort_result_ref = $_[0];
    my $length = scalar(@$bubble_sort_result_ref);
    for(my $i=0;$i<$length;$i++){
        my $flag = 0;
        for(my $j=0;$j<$length-1-$i;$j++){
            if($bubble_sort_result_ref->[$j]>$bubble_sort_result_ref->[$j+1]){
                $flag = 1;
                ($bubble_sort_result_ref->[$j], $bubble_sort_result_ref->[$j+1]) = ($bubble_sort_result_ref->[$j+1], $bubble_sort_result_ref->[$j]);
            }
        }
        if($flag == 0){
            print "\033[32m(在进行全排序之前第($i)趟完成):\033[0m";
            return 0;
        }
    }
}
print @array;
bubble_sort_ref(\@array);
print @array;
#+end_src

** Select Sort
#+begin_src perl
sub select_sort{
    my @select_sort_result = @_;
    my $length = scalar(@select_sort_result);
    for(my $i=0;$i<$length;$i++){
        my $index = $i;
        for(my $j=$i+1;$j<$length;$j++){
            if($select_sort_result[$j]>$select_sort_result[$index]){
                $index = $j;
            }
        }
        ($select_sort_result[$i], $select_sort_result[$index]) = ($select_sort_result[$index], $select_sort_result[$i]);
    }
}
#+end_src
Also, like [[bsf][First bubble sort]], it can't change the origin value in the array. you
can use ~reference~ to change them.

** Insert Sort
#+begin_src perl
sub insert_sort{
    my @insert_sort_result = @_;
    my $length = scalar(@insert_sort_result);
    for(my $i=1;$i<$length;$i++){
        my $now = $insert_sort_result[$i];
        my $index = $i;
        while($index>0 && $now < $insert_sort_result[$index - 1]){
            $insert_sort_result[$index] = $insert_sort_result[$index - 1];
            $index--;
        }
        $insert_sort_result[$index] = $now;
    }
    print_array(@insert_sort_result);
}
#+end_src
